---

# tasks file for osp.servers
- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ osp_servers[instance].name }}"
    state: "{{ osp_servers[instance].state }}"
    image: "{{ osp_servers[instance].image }}"
    meta: "group={{ osp_servers[instance].meta[0].group }}, deployment_name={{ osp_servers[instance].meta[0].deployment_name }}"
    flavor: "{{ osp_servers[instance].flavor }}"
    security_groups: "{{ osp_servers[instance].security_group }}"
    key_name: "{{ osp_servers[instance].key_name }}"
    wait: yes
    nics:
      - net-name: int_network 
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  loop: 
    - frontend
    - app1
    - app2
    - db
  loop_control:
    loop_var: instance
  register: instanceip

- name: Add floating IP to osp_servers[instance].name
  os_floating_ip:
    cloud: ospcloud
    state: "{{ osp_servers[instance].state }}"
    reuse: yes
    server: "{{ osp_servers[instance].name }}"
    network: ext_network
    wait: true
    timeout: 180
  loop:
    - frontend
    - app1
    - app2
    - db
  loop_control:
    loop_var: instance

- name: Wait for server to be available
  
